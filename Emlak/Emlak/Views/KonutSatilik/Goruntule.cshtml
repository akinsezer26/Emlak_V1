
@model Emlak.Models.KONUT_ISYERI
@{
    Layout = null;
}

<html>
<head>
    @Styles.Render("~/Content/bootstrap.min.css")
    @Styles.Render("https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css")
    @Styles.Render("https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css")
    @Styles.Render("https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css")
    @Styles.Render("~/Content/themes/base/jquery-ui.min.css")
    <style>
        body {
            font-family: Arial;
            margin: 0;
            /*background-image:url('../../Image/bg2.jpg');*/
        }

        * {
            box-sizing: border-box;
        }

        img {
            vertical-align: middle;
        }

        /* Position the image container (needed to position the left and right arrows) */
        .container {
            position: relative;
        }

        /* Hide the images by default */
        .mySlides {
            display: none;
        }

        /* Add a pointer when hovering over the thumbnail images */
        .cursor {
            cursor: pointer;
        }

        /* Next & previous buttons */
        .prev,
        .next {
            cursor: pointer;
            position: absolute;
            top: 160px; /*caution*/
            width: auto;
            padding: 16px;
            margin-top: -50px;
            color: white;
            font-weight: bold;
            font-size: 20px;
            border-radius: 0 3px 3px 0;
            user-select: none;
            -webkit-user-select: none;
        }

        /* Position the "next button" to the right */
        .next {
            right: 0;
            border-radius: 3px 0 0 3px;
        }

            /* On hover, add a black background color with a little bit see-through */
            .prev:hover,
            .next:hover {
                background-color: rgba(0, 0, 0, 0.8);
            }

        /* Number text (1/3 etc) */
        .numbertext {
            color: #f2f2f2;
            font-size: 12px;
            padding: 8px 12px;
            position: absolute;
            text-shadow: 1px 1px 5px black;
            top: 0;
        }

        /* Container for image text */
        .caption-container {
            text-align: center;
            background-color: #222;
            padding: 2px 16px;
            color: white;
        }

        .row:after {
            content: "";
            display: table;
            clear: both;
        }

        /* Six columns side by side */
        .column {
            float: left;
            width: 20%;
        }

        /* Add a transparency effect for thumnbail images */
        .demo {
            opacity: 0.4;
        }

            .active,
            .demo:hover {
                opacity: 1;
            }
    </style>
    <meta name="viewport" content="initial-scale=1.0,
        width=device-width" />
    <script src="https://js.api.here.com/v3/3.1/mapsjs-core.js"
            type="text/javascript" charset="utf-8"></script>
    <script src="https://js.api.here.com/v3/3.1/mapsjs-service.js"
            type="text/javascript" charset="utf-8"></script>
</head>
<body>
    <div style="width:60%;margin-left:15%;margin-top:10%;border:outset; box-shadow: 5px 10px #888888;">
        <h2>@Model.ilanBasligi</h2>
        <label>Satılık @Model.EMLAKTURU1.EMLAK_TURU, @Model.il, @Model.Mahalle</label><br /><br />
        <strong style="color:red; font-size:20px">@String.Format("{0:C0}", Model.FiyatNet)</strong><br />
    </div>
    <div style="width:60%; margin-left:15%; margin-top:25px;">
        <div class="container" style="width:60%; float:left">

            @{
                int nullCount = 0;
                var paths = new List<string>();
                if (true)
                {
                    if (Model.picture1 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture1.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture2 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture2.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture3 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture3.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture4 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture4.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture5 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture5.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture6 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture6.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture7 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture7.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture8 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture8.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture9 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture9.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture10 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture10.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture11 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture11.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture12 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture12.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture13 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture13.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture14 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture14.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture15 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture15.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture16 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture16.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture17 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture17.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture18 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture18.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture19 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture19.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture20 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture20.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture21 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture21.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture22 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture22.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture23 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture23.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture24 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture24.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture25 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture25.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture26 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture26.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture27 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture27.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture28 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture28.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture29 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture29.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture30 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture30.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture31 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture31.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture32 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture32.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture33 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture33.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture34 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture34.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                    if (Model.picture35 == null)
                    {
                        nullCount++;
                    }
                    else { paths.Add("~/EmlakImages" + Model.picture35.ToString().Split(new string[] { "EmlakImages" }, StringSplitOptions.None).Last()); }
                }
            }

            @{
                if ((35 - nullCount) == 0)
                {
                    <div class="mySlides">
                        <img src='/EmlakImages/default.JPG' style="width:100%; height:40%;">
                    </div>
                }
                else
                {
                    for (int i = 0; i < (35 - nullCount); i++)
                    {
                        <div class="mySlides">
                            <div class="numbertext">@(i + 1) / @(35 - nullCount)</div>
                            <img src='@Url.Content(paths[i])' style="width:100%; height:40%;">
                        </div>
                    }
                }
            }

            <a class="prev" onclick="plusSlides(-1)">❮</a>
            <a class="next" onclick="plusSlides(1)">❯</a>

            <div class="caption-container">
                <p id="caption"></p>
            </div>
            @{
                if (nullCount != 35)
                {
                    for (int i = 0; i < (35 - nullCount); i++)
                    {
                        <div class="column">
                            <img class="demo cursor" src='@Url.Content(paths[i])' style="width:100%;height:10%;" onclick="currentSlide(@(i + 1))" alt="Resim @(i + 1)">
                        </div>
                    }
                }
                <div>
                    <textarea readonly id="ilanDetay" name="ilanDetay" style="width:100%; resize: none; display:block; overflow:hidden;">@Model.ilanDetayi</textarea>
                </div>
                if (Model.lat != null && Model.lng != null)
                {
                    <div style="width: 530px; height: 350px; margin-top:50px" id="mapContainer"></div>
                }
                <div style="margin-top:250px"></div>
            }
        </div>
        <div style="width:35%; border:outset; float:right;box-shadow: 5px 10px #888888;">
            <div style="width: 50%; float:left; background-color: #e9e9e9;  line-height: 1.3;">
                <label>Ilan No</label><br />
                <label>Ilan Tarihi</label><br />
                <label>Emlak Tipi</label><br />
                <label>m² (Brüt)</label><br />
                <label>m² (Net)</label><br />
                <label>Oda Sayısı</label><br />
                <label>Banyo Sayısı</label><br />
                <label>Binanın Yaşı</label><br />
                <label>Bulunduğu Kat</label><br />
                <label>Kat Sayısı</label><br />
                <label>Isıtma</label><br />
                <label>Balkon Sayısı</label><br />
                <label>Eşyalı</label><br />
                <label>Kullanım Durumu</label><br />
                <label>Site İçerisinde</label><br />
                <label>Aidat TL</label><br />
                <label>Krediye Uygun</label><br />
                <label>Takas</label><br />
                @*@if (Session["userID"] != null)
                {
                    var yetki = Session["UserType"].ToString();
                    var uID = Session["userID"].ToString();
                    if (yetki == "Owner" || yetki == "Admin" || Model.UserID == long.Parse(uID))
                    {
                        <label>Kira Takip</label><br />
                        <label>Kira Takip Et</label><br />
                    }
                }*@
            </div>
            <div style="width: 50%; float:right; line-height: 1.3;">
                <label>@Model.ID</label><br />
                @if (Model.Tarih != null)
                {
                <label>@Model.Tarih.GetValueOrDefault().ToString(("dd/MM/yyyy"))</label><br />
                }
                else
                {
                <label>Belirtilmemiş</label><br />
                }

                @if (Model.EMLAKTURU1.EMLAK_TURU != null)
                {
                <label>Satılık @Model.EMLAKTURU1.EMLAK_TURU</label><br />
                }
                else
                {
                <label>Belirtilmemiş</label><br />
                }

                @if (Model.MetreKareBrut != null)
                {
                <label>@Model.MetreKareBrut</label><br />
                }
                else
                {
                <label>Belirtilmemiş</label><br />
                }

                @if (Model.MetreKare != null)
                {
                <label>@Model.MetreKare</label><br />
                }
                else
                {
                <label>Belirtilmemiş</label><br />
                }

                @if (@Model.ODA_SAYISI.ODA_SAYISI1 != null)
                {
                <label>@Model.ODA_SAYISI.ODA_SAYISI1</label><br />
                }
                else
                {
                <label>Belirtilmemiş</label><br />
                }

                @if (@Model.BANYO_SAYISI.BANYO_SAYISI1 != null)
                {
                <label>@Model.BANYO_SAYISI.BANYO_SAYISI1</label><br />
                }
                else
                {
                <label>Belirtilmemiş</label><br />
                }

                @if (@Model.BINA_YASI.BINA_YASI1 != null)
                {
                <label>@Model.BINA_YASI.BINA_YASI1</label><br />
                }
                else
                {
                <label>Belirtilmemiş</label><br />
                }

                @if (@Model.BULUNDUGU_KAT.BULUNDUGU_KAT1 != null)
                {
                <label>@Model.BULUNDUGU_KAT.BULUNDUGU_KAT1</label><br />
                }
                else
                {
                <label>Belirtilmemiş</label><br />
                }

                @if (@Model.KAT_SAYISI.KAT_SAYISI1 != null)
                {
                <label>@Model.KAT_SAYISI.KAT_SAYISI1</label><br />
                }
                else
                {
                <label>Belirtilmemiş</label><br />
                }

                @if (@Model.ISITMA_TIPI.ISITMA_TIPI1 != null)
                {
                <label>@Model.ISITMA_TIPI.ISITMA_TIPI1</label><br />
                }
                else
                {
                <label>Belirtilmemiş</label><br />
                }


                @if (@Model.BalkonSayisi != null)
                {
                <label>@Model.BalkonSayisi</label><br />
                }
                else
                {
                <label>Belirtilmemiş</label><br />
                }

                @if (Model.EsyaliMi == true)
                {<label>Evet</label><br />}
                else if (Model.EsyaliMi == false)
                {<label>Hayır</label><br />}
                else
                {<label>Belirtilmemiş</label><br />}
                <label>@Model.KULLANIM_DURUMU.KULLANIM_DURUMU1</label><br />

                @if (Model.SiteIcerisinde == true)
                {<label>Evet</label><br />}
                else if (Model.SiteIcerisinde == false)
                {<label>Hayır</label><br />}
                else
                {<label>Belirtilmemiş</label><br />}

                @if (Model.AidatTL != null)
                {<label>@Model.AidatTL</label><br />}
                else
                {<label>Belirtilmemiş</label><br />}

                @if (Model.krediyeUygun == true)
                {<label>Evet</label><br />}
                else if (Model.krediyeUygun == false)
                {<label>Hayır</label><br />}
                else
                {<label>Belirtilmemiş</label><br />}

                @if (Model.Takas == true)
                {<label>Evet</label><br />}
                else if (Model.Takas == false)
                {<label>Hayır</label><br />}
                else
                {<label>Belirtilmemiş</label><br />}
                @*@if (Session["userID"] != null)
                {
                var yetki = Session["UserType"].ToString();
                var uID = Session["userID"].ToString();
                if (yetki == "Owner" || yetki == "Admin" || Model.UserID == long.Parse(uID))
                {
                if (Model.KiraTakip == true)
                {<label>Evet</label><br /> }
                else if (Model.KiraTakip == false)
                {<label>Hayır</label><br />}
                else
                {<label>Hayir</label><br />}
                <a class='btn btn-default btn-sm' onclick="PopupFormKiraTakip('@Url.Action("AddOrEditKiraTakipKonut", "DB" )/@Model.ID')">
                <i class='fa fa-pencil'></i>
                </a>
                }
                }*@
            </div>
            @{
                if (Session["userID"] != null)
                {
                    var yetki = Session["UserType"].ToString();
                    var uID = Session["userID"].ToString();

                    if (yetki == "Owner" || yetki == "Admin" || Model.UserID == long.Parse(uID))
                    {
                        <a class='btn btn-default btn-sm' style="margin-left:5%; margin-top:15px;" onclick="PopupFormKonutSatilik('@Url.Action("AddOrEditKonutSatilik", "DB")/@Model.ID')">
                            <i class='fa fa-pencil'></i> Düzenle
                        </a><a class='btn btn-danger btn-sm' style="margin-left:10px; margin-top:15px;" onclick="Delete(@Model)">
                            <i class='fa fa-trash'></i> Sil
                        </a>
                    }
                }
            }
        </div>
    </div>
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/notify.min.js"></script>
    <script>
        // Initialize the platform object:
        var platform = new H.service.Platform({
            'apikey': 'UrRVky2kcqBab-ct3CYhNh7kRkWsTNr5jtlX_lfOXlw'
        });

        // Obtain the default map types from the platform object
        var maptypes = platform.createDefaultLayers();

        // Instantiate (and display) a map object:
        var map = new H.Map(
            document.getElementById('mapContainer'),
            maptypes.vector.normal.map,
            {
                zoom: 18,
                center: { lng: '@Model.lng.ToString().Replace(",",".")', lat: '@Model.lat.ToString().Replace(",",".")' }
            });
        map.addObject(new H.map.Marker({lat:'@Model.lat.ToString().Replace(",",".")', lng: '@Model.lng.ToString().Replace(",",".")'}));
    </script>

    <script>
        var popUp;
        function PopupFormKonutSatilik(url) {
            var formDiv = $('<div/>');
            $.get(url)
                .done(function (response) {
                    formDiv.html(response);

                    popUp = formDiv.dialog({
                        autoOpen: true,
                        resizable: false,
                        title: 'Satılık Konut Ekle',
                        height: 600,
                        width: 1200,
                        close: function myfunction() {
                            popUp.dialog('destroy').remove();
                        }
                    });
                });
        }

        function PopupFormKiraTakip(url) {
            var formDiv = $('<div/>');
            $.get(url)
                .done(function (response) {
                    formDiv.html(response);

                    popUp = formDiv.dialog({
                        autoOpen: true,
                        resizable: false,
                        title: 'Kiracı Ekle',
                        height: 600,
                        width: 500,
                        close: function myfunction() {
                            popUp.dialog('destroy').remove();
                        }
                    });
                });
        }

        function SubmitFormKiraTakip(form) {
            $.validator.unobtrusive.parse(form);
            var data = new FormData(form)

            if ($(form).valid()) {
                $.ajax({
                    type: "POST",
                    enctype: 'multipart/form-data',
                    url: "/DB/AddOrEditKiraTakipKonut",
                    processData: false,  // Important!
                    contentType: false,
                    cache: false,
                    data: data,
                    success: function (data) {
                        if (data.success) {
                            popUp.dialog('close');

                            location.reload();

                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "success"
                            })
                        }
                    }
                });
            }
            return false;
        }

        function SubmitFormKonutSatilik(form) {
            $.validator.unobtrusive.parse(form);
            var data = new FormData(form)

            if ($(form).valid()) {
                $.ajax({
                    type: "POST",
                    enctype: 'multipart/form-data',
                    url: "/DB/AddOrEditKonutSatilik",
                    processData: false,  // Important!
                    contentType: false,
                    cache: false,
                    data: data,
                    success: function (data) {
                        if (data.success) {
                            popUp.dialog('close');

                            location.reload();

                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "success"
                            })
                        }
                    }
                });
            }
            return false;
        }
    </script>
    <script>
        var slideIndex = 1;

        showSlides(slideIndex);
        setHeight($("#ilanDetay"));

        function setHeight(jq_in) {
            jq_in.each(function (index, elem) {
                // This line will work with pure Javascript (taken from NicB's answer):
                elem.style.height = elem.scrollHeight + 5 + 'px';
            });
        }

        function plusSlides(n) {
            showSlides(slideIndex += n);
        }

        function currentSlide(n) {
            showSlides(slideIndex = n);
        }

        function showSlides(n) {
            var i;
            var slides = document.getElementsByClassName("mySlides");
            var dots = document.getElementsByClassName("demo");
            var captionText = document.getElementById("caption");
            if (n > slides.length) { slideIndex = 1 }
            if (n < 1) { slideIndex = slides.length }
            for (i = 0; i < slides.length; i++) {
                slides[i].style.display = "none";
            }
            for (i = 0; i < dots.length; i++) {
                dots[i].className = dots[i].className.replace(" active", "");
            }
            slides[slideIndex - 1].style.display = "block";
            dots[slideIndex - 1].className += " active";
            captionText.innerHTML = dots[slideIndex - 1].alt;
        }
    </script>
</body>
</html>