
@using Emlak.Models;
@model KONUT_ISYERI
@{
    Layout = null;
}

@using (Html.BeginForm("AddOrEditKonutSatilik", "DB", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitFormKonutSatilik(this)" }))
{
    @Html.HiddenFor(model => model.ID)
    <div class="form-group">
        @Html.EditorFor(model => model.ilanBasligi, new { @htmlAttributes = new { placeholder = "İlan Başlığı", @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.TextAreaFor(model => model.ilanDetayi, 10, 120, htmlAttributes: new { style = "width: 100%; max-width: 100%;" })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.Adi, new { @htmlAttributes = new { placeholder = "İlan Sahibinin Adı", @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.Soyadi, new { @htmlAttributes = new { placeholder = "İlan Sahibinin Soyadı", @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.MusteriKaynagi, new { @htmlAttributes = new { placeholder = "Müşteri Kaynağı", @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.TC, new { @htmlAttributes = new { placeholder = "TC Kimlik No", @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.Iban, new { @htmlAttributes = new { placeholder = "Iban No", @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.CepTelefonu, new { @htmlAttributes = new { placeholder = "Cep Telefonu", @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.IsTelefonu, new { @htmlAttributes = new { placeholder = "İş Telefonu", @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.FiyatNet, new { @htmlAttributes = new { placeholder = "Fiyat", @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.MetreKareBrut, new { @htmlAttributes = new { placeholder = "Metrekare(Brüt)", @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.MetreKare, new { @htmlAttributes = new { placeholder = "Metrekare(Net)", @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.Label("Konut Tipi", new { @class = "control-label" })
        @Html.DropDownListFor(model => model.EmlakTuru, (List<SelectListItem>)ViewBag.konutTipi, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.Label("Oda Sayısı", new { @class = "control-label" })
        @Html.DropDownListFor(model => model.OdaSayisi, (List<SelectListItem>)ViewBag.OdaSayisi, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.Label("Bina Yaşı", new { @class = "control-label" })
        @Html.DropDownListFor(model => model.BinaYasi, (List<SelectListItem>)ViewBag.BinaYasi, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.Label("Bulunduğu Kat", new { @class = "control-label" })
        @Html.DropDownListFor(model => model.Kat, (List<SelectListItem>)ViewBag.BulunduguKat, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.Label("Kat Sayısı", new { @class = "control-label" })
        @Html.DropDownListFor(model => model.KatSayisi, (List<SelectListItem>)ViewBag.KatSayisi, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.Label("Isıtma", new { @class = "control-label" })
        @Html.DropDownListFor(model => model.IsitmaTipi, (List<SelectListItem>)ViewBag.IsitmaTipi, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.Label("Banyo Sayısı", new { @class = "control-label" })
        @Html.DropDownListFor(model => model.BanyoSayisi, (List<SelectListItem>)ViewBag.BanyoSayisi, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.Label("Balkon", new { @class = "control-label" })
        @Html.DropDownListFor(model => model.BalkonVarmi, new[] { new SelectListItem { Text = "Belirtilmemiş", Value = null }, new SelectListItem { Text = "Var", Value = "True" }, new SelectListItem { Text = "Yok", Value = "False" } })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.BalkonSayisi, new { @htmlAttributes = new { placeholder = "Balkon Sayısı", @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.Label("Eşyalı", new { @class = "control-label" })
        @Html.DropDownListFor(model => model.EsyaliMi, new[] { new SelectListItem { Text = "Belirtilmemiş", Value = null }, new SelectListItem { Text = "Evet", Value = "True" }, new SelectListItem { Text = "Hayır", Value = "False" } })
    </div>
    <div class="form-group">
        @Html.Label("Kullanım Durumu", new { @class = "control-label" })
        @Html.DropDownListFor(model => model.KullanimDurumu, (List<SelectListItem>)ViewBag.KullanimDurumu, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.AidatTL, new { @htmlAttributes = new { placeholder = "Aidat(TL)", @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.Label("Krediye Uygun", new { @class = "control-label" })
        @Html.DropDownListFor(model => model.krediyeUygun, new[] { new SelectListItem { Text = "Belirtilmemiş", Value = null }, new SelectListItem { Text = "Evet", Value = "True" }, new SelectListItem { Text = "Hayır", Value = "False" } })
    </div>
    <div class="form-group">
        @Html.Label("Takaslı", new { @class = "control-label" })
        @Html.DropDownListFor(model => model.Takas, new[] { new SelectListItem { Text = "Belirtilmemiş", Value = null }, new SelectListItem { Text = "Evet", Value = "True" }, new SelectListItem { Text = "Hayır", Value = "False" } })
    </div>
    <div>
        @Html.Label("Adres Bilgileri")
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.il, new { @htmlAttributes = new { placeholder = "İl" } })
        @Html.EditorFor(model => model.ilce, new { @htmlAttributes = new { placeholder = "İlçe" } })
        @Html.EditorFor(model => model.Mahalle, new { @htmlAttributes = new { placeholder = "Mahalle" } })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.Cadde, new { @htmlAttributes = new { placeholder = "Cadde" } })
        @Html.EditorFor(model => model.Sokak, new { @htmlAttributes = new { placeholder = "Sokak" } })
        @Html.EditorFor(model => model.AptAdi, new { @htmlAttributes = new { placeholder = "Apartman Adı" } })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.AptNo, new { @htmlAttributes = new { placeholder = "Apartman No" } })
        @Html.EditorFor(model => model.DaireNo, new { @htmlAttributes = new { placeholder = "Daire No" } })
    </div>
    <div class="form-group">
        @Html.EditorFor(model => model.lat, new { @htmlAttributes = new { placeholder = "lat" } })
        @Html.EditorFor(model => model.lng, new { @htmlAttributes = new { placeholder = "lng" } })
    </div>
    <div>
        @Html.Label("Detaylı Bilgi")
    </div>
    <div class="form-group">
        <label id="CepheClick" onclick="hideCephe()">Cephe</label>
        <div id="divCephe" style="border: 1px solid #000000;">
            <label style="margin-right:5px; margin-left:10px;">Batı</label>@Html.CheckBox("CepheBati", Model.CepheBati ?? false)
            <label style="margin-right:5px; margin-left:10px;">Doğu</label>@Html.CheckBox("CepheDogu", Model.CepheDogu ?? false)
            <label style="margin-right:5px; margin-left:10px;">Güney</label>@Html.CheckBox("CepheGuney", Model.CepheGuney ?? false)
            <label style="margin-right:5px; margin-left:10px;">Kuzey</label>@Html.CheckBox("CepheKuzey", Model.CepheKuzey ?? false)
        </div>
    </div>
    <div class="form-group">
        <label id="IcOzellikler" onclick="hideIcOzellikler()">İç Özellikler</label>
        <div id="divCephe" style="border: 1px solid #000000;">
            <label style="margin-right:5px; margin-left:10px;">ADSL</label>@Html.CheckBox("IcOzADSL", Model.IcOzADSL ?? false)
            <label style="margin-right:5px; margin-left:10px;">Ahşap Doğrama</label>@Html.CheckBox("IcOzAhsapDograma", Model.IcOzAhsapDograma ?? false)
            <label style="margin-right:5px; margin-left:10px;">Akıllı Ev</label>@Html.CheckBox("IcOzAkilliEv", Model.IcOzAkilliEv ?? false)
            <label style="margin-right:5px; margin-left:10px;">Alarm(Hırsız)</label>@Html.CheckBox("IcOzAlarm_Hirsiz", Model.IcOzAlarm_Hirsiz ?? false)<br />

            <label style="margin-right:5px; margin-left:10px;">Alarm(Yangın)</label>@Html.CheckBox("IcOzAlarm_Yangin", Model.IcOzAlarm_Yangin ?? false)
            <label style="margin-right:5px; margin-left:10px;">Alaturka Tuvalet</label>@Html.CheckBox("IcOzAlaturka_Tuv", Model.IcOzAlaturka_Tuv ?? false)
            <label style="margin-right:5px; margin-left:10px;">Alüminyum Doğrama</label>@Html.CheckBox("IcOzAliminyumDograma", Model.IcOzAliminyumDograma ?? false)
            <label style="margin-right:5px; margin-left:10px;">Amerikan Kapı</label>@Html.CheckBox("IcOzAmerikanKapi", Model.IcOzAmerikanKapi ?? false)<br />

        </div>
    </div>

    <div class="form-group">
        @Html.EditorFor(model => model.Note, new { @htmlAttributes = new { placeholder = "Not", @class = "form-control", autocomplete = "off" } })
    </div>
    <div class="form-group">
        <input id="Kisyeri_images" type="file" name="Kisyeri_images" multiple accept=".jpg,.jpeg">
        <input type="submit" value="Ekle" class="btn btn-primary" />
    </div>
}
<script>

    function hideCephe() {
        var x = document.getElementById("divCephe");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }

</script>